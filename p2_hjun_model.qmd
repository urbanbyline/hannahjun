---
title: "hjun_model"
format: 
  html:
    theme: minty
    toc: true
    toc-location: left
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Load Libraries & Prep

```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(here)
library(mlogit)
library(knitr)
library(caret)

getwd()


here("code",
     "mlogit_helpers_new.R") |>
  source()

'%!in%' <- function(x,y)!('%in%'(x,y))

```

### Load and Shape the Data

```{r}
hh_data <- here("data",
                "NHTS",
                "hhpub.csv") |>
  read_csv(show_col_types = FALSE)

hh_data |> 
  count(HOUSEID) |> 
  filter(n > 1)

person_data <- here("data",
                    "NHTS",
                    "perpub.csv") |>
  read_csv(show_col_types = FALSE)

hh_data <- hh_data |>
  select(WRKCOUNT,
         DRVRCNT,
         HHVEHCNT,
         HHSIZE,
         NUMADLT,
         HHFAMINC,
         HBPPOPDN,
         HOUSEID,
         HTHTNRNT,
         HOMEOWN,
         URBRUR)


person_data <- person_data |>
  select(HOUSEID,
         R_AGE,
         WORKER,
         DRIVER,
         MEDCOND
         )
```

### Outcome & Predictor Set Up

```{r}
hh_data <- hh_data |>
  mutate(veh_avail = case_when(HHVEHCNT == 0 ~ "Zero",
                               DRVRCNT > HHVEHCNT ~ "Insuff.",
                               TRUE ~ "Suff."))
hh_data <- hh_data |>
  mutate(n_child = HHSIZE - NUMADLT)

n_seniors <- person_data |>
  mutate(is_senior = R_AGE > 64) |>
  group_by(HOUSEID) |>
  summarise(n_seniors = sum(is_senior))

hh_data <- hh_data |>
  left_join(n_seniors)

hh_data <- hh_data |>
  mutate(three_drivers = DRVRCNT > 2)

hh_data <- hh_data |>
  mutate(n_extra_drivers = ifelse(three_drivers, DRVRCNT - 2, 0))

hh_data <- hh_data |>
  mutate(HHFAMINC = as.numeric(HHFAMINC)) |>
  filter(HHFAMINC > 0) |>
  mutate(income = case_when(HHFAMINC < 4 ~ "low",
                             HHFAMINC < 5 & HHSIZE > 1 ~ "low",
                             HHFAMINC < 6 & HHSIZE > 3 ~ "low",
                             HHFAMINC < 7 & HHSIZE > 5 ~ "low",
                             HHFAMINC < 8 & HHSIZE > 7 ~ "low",
                             HHFAMINC > 8 ~ "high",
                            TRUE ~ "medium")) |>
    mutate(income = factor(income, levels = c("medium", "low", "high")))

non_work_driver <- person_data |>
  mutate(non_work_driver = WORKER == "02" & DRIVER == "01") |>
  group_by(HOUSEID) |>
  summarise(non_work_driver = max(non_work_driver))

hh_data <- hh_data |>
  left_join(non_work_driver)

hh_data <- hh_data |>
  filter(HBPPOPDN > 0) |>
  mutate(density = case_when(HBPPOPDN < 7000 ~ "Low",
                             HBPPOPDN < 10000 ~ "High",
                             TRUE ~ "Medium"))


hh_data <- hh_data %>%
  mutate(HTHTNRNT= case_when(
    HTHTNRNT %in% c("0", "05", "20", "30", "40") ~ "minority_rent",
    HTHTNRNT %in% c("50", "60", "70", "80", "90", "95") ~ "majority_rent",
    TRUE ~ NA_character_  # Assign NA for any values not listed
  ))

hh_data <- hh_data |>
  filter(!HOMEOWN %in% c(-7, -8, 97)) |>  # Remove unwanted values
  mutate(HOMEOWN = case_when(
    HOMEOWN == "01" ~ "OWN",
    HOMEOWN == "02" ~ "RENT",
    TRUE ~ as.character(HOMEOWN)  # Keep other values unchanged
  )) |>
  rename(homeownership = HOMEOWN)  # Rename column

hh_data <- hh_data |>
  filter(!URBRUR %in% c(-7, -8, 97)) |>  # Remove unwanted values
  mutate(URBRUR = case_when(
    URBRUR == "01" ~ "URBAN",
    URBRUR == "02" ~ "RURAL",
    TRUE ~ as.character(URBRUR)  # Keep other values unchanged
  ))

hh_data <- hh_data |>
  select(HOUSEID,
         veh_avail,
         WRKCOUNT,
         n_child,
         n_seniors,
         n_extra_drivers,
         three_drivers,
         non_work_driver,
         income,
         density,
         HTHTNRNT,
         homeownership,
         URBRUR)

```

```{}
```

### Creating and testing data set

```{r}
set.seed(6797887)

hh_data_train_ids <- sample(hh_data$HOUSEID, 
                        size = ceiling(nrow(hh_data)/2))

hh_data_train <- hh_data |>
  filter(HOUSEID %in% hh_data_train_ids)

hh_data_test <- hh_data |>
  filter(HOUSEID %!in% hh_data_train_ids)

veh_dfidx_train <- fn_make_dfidx(hh_data_train,
                                "HOUSEID",
                                "veh_avail")

veh_dfidx_test <- fn_make_dfidx(hh_data_test,
                                "HOUSEID",
                                "veh_avail")


model_veh <- mlogit(choice ~ 0 | 
                      WRKCOUNT +
                      n_child +
                      n_seniors +
                      n_extra_drivers +
                      three_drivers + 
                      non_work_driver +
                      income +
                      HTHTNRNT +
                      homeownership+
                      URBRUR+
                      density | 0,
                           veh_dfidx_train,
                           reflevel = "Suff.")

summary(model_veh)

predicts_test <- predict(model_veh, veh_dfidx_test) |>
  as.data.frame() |>
  rownames_to_column("HOUSEID") |>
  mutate(HOUSEID = as.numeric(HOUSEID)) |>
  left_join(hh_data_test)

head(predicts_test) |>
  kable()

```

The `echo: false` option disables the printing of code (only output is displayed).

### Checking Model Accuracy

```{r}
predicts_test <- predicts_test |>
  mutate(most_likely = case_when((Suff. > Insuff.) & (Suff. > Zero) ~ "Suff.",
                                 (Zero > Insuff.) & (Zero > Suff.) ~ "Zero",
                                 TRUE ~ "Insuff.")) 
predicts_test <- predicts_test |>
  mutate(most_likely = factor(most_likely, 
                              levels = c("Suff.", "Insuff.", "Zero"))) |>
  mutate(veh_avail = factor(veh_avail,
                            levels = c("Suff.", "Insuff.", "Zero"))) |>
  mutate(correct = veh_avail == most_likely)
confusionMatrix(data = predicts_test$most_likely,
                reference = predicts_test$veh_avail)

model <- mlogit(choice ~ 0 | 
                      WRKCOUNT +
                      n_child +
                      n_seniors +
                      n_extra_drivers +
                      three_drivers + 
                      non_work_driver +
                      income +
                      HTHTNRNT +
                      homeownership+
                      URBRUR+
                      density | 0,
                           veh_dfidx_train,
                           reflevel = "Suff.")
AIC(model)

model_carole <- mlogit(choice ~ 0 | 
                      WRKCOUNT +
                      n_child +
                      n_seniors +
                      n_extra_drivers +
                      three_drivers + 
                      non_work_driver +
                      income +
                      density | 0,
                           veh_dfidx_train,
                           reflevel = "Suff.")
AIC(model_carole)

```
